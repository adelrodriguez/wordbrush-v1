// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  projects Project[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

enum IntentedUse {
  Personal
  Blog
  Newsletter
  SocialMedia
  BookCover
  BookInterior
  PodcastCover
  PodcastEpisode
  Other
}

enum AspectRatio {
  Square
  Portrait
  Landscape
}

enum ProjectStatus {
  Draft
  Submitted
  Removed
}

model Project {
  id String @id @default(cuid())

  name   String
  status ProjectStatus @default(Draft)

  user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String?

  artStyle   ArtStyle? @relation(fields: [artStyleId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  artStyleId String?

  aspectRation AspectRatio?
  detail       Int?
  exclude      String?
  intentedUse  IntentedUse?
  keyElements  String?
  mood         String?

  images Image[]
}

model Image {
  id String @id @default(cuid())

  url    String
  prompt String

  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  projectId String
}

enum Category {
  Abstract
  Digital
  Fantasy
  Geometric
  Historical
  Illustrative
  Modern
  Nature
  SciFi
  Technological
  Traditional
}

model ArtStyle {
  id String @id @default(cuid())

  name        String  @unique
  description String?
  prompt      String

  keywords String[]
  category Category?

  exampleImageUrl String?

  Project Project[]
}
